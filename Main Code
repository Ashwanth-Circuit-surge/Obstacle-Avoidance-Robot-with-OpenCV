/*
 * Project: Obstacle Avoidance Robot
 * Author: Ashwanth, Robotics Enthusiast
 * Description: 
 *   This project utilizes Arduino and Python OpenCV to create an obstacle avoidance robot. 
 *   Python uses OpenCV for obstacle detection from webcam video, while Arduino controls 
 *   servo motors and ultrasonic sensors for navigation.
 * File: obstacle_avoidance_robot.ino
 * Date: [Date of creation or last modification]
 */

#include <NewPing.h> // Library for HC-SR04 Ultrasonic Sensor
#include <AFMotor.h> // Library for L298N Motor Driver
#include <SoftwareSerial.h> // Library for SoftwareSerial communication
#include <DFPlayerMini_Fast.h> // Library for DFPlayer Mini MP3 Player
#include <ESP8266WiFi.h> // Library for ESP8266 WiFi Module
#include <SPI.h>
#include <Adafruit_MCP23S17.h> // Library for MCP23S17 (74HC595) Shift Register

#define TRIGGER_PIN  9 // Arduino pin tied to trigger pin on the ultrasonic sensor.
#define ECHO_PIN     10 // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 200 // Maximum distance we want to ping for (in centimeters). Maximum sensor distance is rated at 400-500cm.
#define MOTOR_LEFT_PWM 5 // PWM control for left motor
#define MOTOR_RIGHT_PWM 6 // PWM control for right motor
#define MOTOR_LEFT_DIR 4 // Direction control for left motor
#define MOTOR_RIGHT_DIR 7 // Direction control for right motor
#define BUZZER_PIN 3 // Arduino pin tied to the buzzer
#define RX_PIN 8 // Arduino pin connected to Bluetooth module's TX pin
#define TX_PIN 11 // Arduino pin connected to Bluetooth module's RX pin
#define WIFI_SSID "your_wifi_ssid"
#define WIFI_PASSWORD "your_wifi_password"
#define DFPLAYER_RX 12 // Arduino pin connected to DFPlayer Mini's TX pin
#define DFPLAYER_TX 13 // Arduino pin connected to DFPlayer Mini's RX pin
#define LED_LATCH 2 // Arduino pin connected to 74HC595 latch pin
#define LED_CLOCK 3 // Arduino pin connected to 74HC595 clock pin
#define LED_DATA 4 // Arduino pin connected to 74HC595 data pin

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
AF_DCMotor motorLeft(1, MOTOR_LEFT_DIR); // Setup left motor.
AF_DCMotor motorRight(2, MOTOR_RIGHT_DIR); // Setup right motor.
SoftwareSerial BTSerial(RX_PIN, TX_PIN); // RX, TX pins for Bluetooth communication
SoftwareSerial mp3(DFPLAYER_RX, DFPLAYER_TX); // RX, TX pins for DFPlayer Mini
Adafruit_MCP23S17 mcp;

void setup() {
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(LED_LATCH, OUTPUT);
  pinMode(LED_CLOCK, OUTPUT);
  pinMode(LED_DATA, OUTPUT);
  
  Serial.begin(9600);
  BTSerial.begin(9600);
  mp3.begin(9600);
  
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  Serial.println("Connected to WiFi");

  mcp.begin(0);
  mcp.pinMode(0, OUTPUT); // Set 74HC595 pins as output
  mcp.pinMode(1, OUTPUT);
}

void loop() {
  delay(50);
  unsigned int uS = sonar.ping();
  unsigned int distance = uS / US_ROUNDTRIP_CM; // Convert ping time to distance in cm.
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println("cm");

  if (distance < 15) { // If obstacle is detected within 15cm
    stopRobot();
    tone(BUZZER_PIN, 1000); // Sound buzzer
    delay(500);
    noTone(BUZZER_PIN);
    delay(500);
    playSound(); // Play sound via DFPlayer Mini
    moveBackward();
    delay(1000);
    turnRight();
  } else {
    moveForward();
  }
}

void moveForward() {
  motorLeft.setSpeed(150);
  motorRight.setSpeed(150);
  motorLeft.run(FORWARD);
  motorRight.run(FORWARD);
  setLed(true);
  Serial.println("Moving Forward");
}

void moveBackward() {
  motorLeft.setSpeed(150);
  motorRight.setSpeed(150);
  motorLeft.run(BACKWARD);
  motorRight.run(BACKWARD);
  setLed(false);
  Serial.println("Moving Backward");
}

void turnRight() {
  motorLeft.setSpeed(150);
  motorRight.setSpeed(150);
  motorLeft.run(FORWARD);
  motorRight.run(BACKWARD);
  setLed(false);
  Serial.println("Turning Right");
}

void stopRobot() {
  motorLeft.setSpeed(0);
  motorRight.setSpeed(0);
  Serial.println("Robot Stopped");
}

void playSound() {
  mp3.stop();
  mp3.play(1); // Play the first sound file stored on DFPlayer Mini
  Serial.println("Playing Sound");
}

void setLed(bool state) {
  mcp.digitalWrite(0, state); // Set the output pins of 74HC595 accordingly
  mcp.digitalWrite(1, !state);
}

// Developed By Ashwanth: Obstacle Avoidance Robot using Arduino Nano, ESP12F, HC-05 Bluetooth Module, HC-SR04 Ultrasonic Sensor, L298N Motor Driver, DFPlayer Mini MP3 Player, and 74HC595 Shift Register.
